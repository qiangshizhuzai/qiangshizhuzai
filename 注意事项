斐波那契数列用递归和循环解决，时间复杂度完全不同，前者时间复杂度为O(n);
在编程前，要三思而后行，寻找效率较高的算法；
很多实际问题，往往可以转化为斐波那契数列或者其变形；
在将实际问题抽象为斐波那契数列解决时，需要注意实际问题的初值，可能与斐波那契数列的初值不同
